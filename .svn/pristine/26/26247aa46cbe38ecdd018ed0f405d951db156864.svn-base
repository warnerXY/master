package com.vivebest.erp.control;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.vivebest.erp.entity.Authority;
import com.vivebest.erp.entity.Customer;
import com.vivebest.erp.entity.Teller;
import com.vivebest.erp.service.AuthorityService;
import com.vivebest.erp.service.TellerService;
import com.vivebest.erp.utils.MD5;



@Controller
@RequestMapping("/teller")
public class TellerControl {
	
	@Autowired
	private TellerService tellerService;
	
	@Autowired
	private AuthorityService authorityService;
	
	@RequestMapping(value="addTeller",method=RequestMethod.POST)
	public String registerTeller(Model model,HttpServletRequest req){
		String tName=req.getParameter("tName");
		String password=req.getParameter("tPassword");
		Teller teller=new Teller();
		teller.settName(tName);
		teller.settPassword(password);
		int autId=Integer.parseInt(req.getParameter("autId"));
		teller.setAutId(autId);
		teller.setDelete(false);
		boolean ok=tellerService.insertTeller(teller);
		System.out.println(teller);
		if (ok) {
			model.addAttribute("message", "注册成功");
			return "toller/loginTeller";
		}else{
			model.addAttribute("message", "注册失败");
			return "toller/registerTeller";
		}
}
	
	/**
	 * 登陆时间
	 * @param userName
	 * @param password
	 * @param httpSession
	 * @return
	 */
	@RequestMapping(value="loginTeller",method=RequestMethod.POST)
	@ResponseBody
	public String loginTeller(@RequestParam String userName,@RequestParam String password,HttpSession httpSession)
	{
		Teller teller=new Teller();
		teller.settName(userName);
		teller.settPassword(MD5.encode(password.trim()));
		Teller t=tellerService.tellerLogin(teller);
		System.out.println(">>>>>>>>>>>>>>>>>>>>>"+t);
		if(t!=null)
		{
			//不为空
			//登陆成功
			//判断柜员是否失效
			if(t.getIsDelete())
			{
				//存在
				System.out.println(">>>>>>>>>>>>>>登陆成功");
				httpSession.setAttribute("teller", t);
				//修改登陆时间
				
				t.settLoginTime(new Date());
				tellerService.updateTeller(t);
				System.out.println(">>>>>>>>>修改时间");
				return "1";
			}
			else
			{
				//失效用户
				System.out.println(">>>>>>>>>>>>>>失效用户");
				return "-1";
			}
		}
		else
		{
			//不存在
			System.out.println(">>>>>>>>>>>>>>登陆失败");
			return "0";
		}
	}
	@RequestMapping(value="loginHome",method=RequestMethod.GET)
	public String loginHome(HttpSession httpSession)
	{
		Teller teller=(Teller) httpSession.getAttribute("teller");
		if(teller==null)
		{
			//用户失效重新登陆
			return "teller/login";
		}
		else
		{
			//查询客户处理事件数，等待写
			return "teller/home";
		}
	}

	
	//退出
	@RequestMapping(value="loginOut",method=RequestMethod.GET)
	public String loginOut(HttpSession httpSession)
	{
		Teller teller=(Teller) httpSession.getAttribute("teller");
		if(teller==null)
		{
			//用户失效重新登陆
			return "teller/login";
		}
		else
		{
			httpSession.removeAttribute("teller");
			//查询客户处理事件数，等待写
			return "teller/login";
		}
	}
	
	
	//显示全部柜员信息
	@RequestMapping(value="showTeller",method=RequestMethod.GET)
	public String showTeller(HttpSession httpSession,HttpServletRequest request)
	{
		Teller teller=(Teller) httpSession.getAttribute("teller");
		if(teller==null)
		{
			//用户失效重新登陆
			return "teller/login";
		}
		else
		{
			Teller t=new Teller();
			t.setDelete(true);
			
			Authority authority=new Authority();
			authority.setDelete(true);
			List<Authority> aus=authorityService.getAllAu(authority);
			System.out.println(">>>>>>>>>>>>>>>"+aus);
			List<Teller> tellers=tellerService.getAllTeller(teller);
			request.setAttribute("tellers", tellers);
			request.setAttribute("aus", aus);
			return "back/show_teller";
		}
	}
	
	//获取某个柜员信息
	@RequestMapping(value="getTellerMessage",method=RequestMethod.POST)
	@ResponseBody
	public Teller getTellerMessage(Model model,@RequestParam String id,HttpSession httpSession,HttpServletRequest request)
	{
		Teller teller=(Teller) httpSession.getAttribute("teller");
		if(teller==null)
		{
			//用户失效重新登陆
			model.addAttribute("statu", 0);
			return null;
		}
		else
		{
			Teller t=new Teller();
			t.settId(Integer.parseInt(id));
			Teller te=tellerService.getTellerMessage(t);
			
			/*model.addAttribute("statu", 1);
			model.addAttribute("teller", te);
			System.out.println(">>>>>>>>>>>>>>>>>>"+model);*/
			return te;
		}
	}
	
	//更新柜员权限
	@RequestMapping(value="updateTellerAu",method=RequestMethod.POST)
	@ResponseBody
	public String updateTellerAu(@RequestParam String tId,@RequestParam String auId,HttpSession httpSession,HttpServletRequest request)
	{
		Teller teller=(Teller) httpSession.getAttribute("teller");
		if(teller==null)
		{
			//用户失效重新登陆
			return "0";
		}
		else
		{
			Teller t=new Teller();
			t.settId(Integer.parseInt(tId));
			Teller te=tellerService.getTellerMessage(t);
			te.setAutId(Integer.parseInt(auId));//修改权限
			//更改信息
			boolean flag=tellerService.updateTeller(te);
			if(flag)
			{
				return "1";
			}
			else
			{
				return "-1";
			}
		}
	}
}
